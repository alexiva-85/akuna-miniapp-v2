name: Production Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:  # Manual trigger

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Monitor /api/health
      id: health_check
      run: |
        echo "Monitoring /api/health..."
        response=$(curl -s -w "%{http_code}|%{time_total}|%{header_json}" https://akuna-miniapp-v2.vercel.app/api/health)
        status=$(echo $response | cut -d'|' -f1)
        time_total=$(echo $response | cut -d'|' -f2)
        headers=$(echo $response | cut -d'|' -f3)
        
        echo "Status: $status"
        echo "Response time: ${time_total}s"
        
        if [[ "$status" =~ ^[5][0-9][0-9]$ ]] || (( $(echo "$time_total > 10" | bc -l) )); then
          echo "❌ /api/health failed: $status (${time_total}s)"
          echo "failure=true" >> $GITHUB_OUTPUT
          echo "endpoint=/api/health" >> $GITHUB_OUTPUT
          echo "status=$status" >> $GITHUB_OUTPUT
          echo "time=$time_total" >> $GITHUB_OUTPUT
          echo "headers=$headers" >> $GITHUB_OUTPUT
        else
          echo "✅ /api/health OK: $status (${time_total}s)"
          echo "failure=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Monitor /dashboard
      id: dashboard_check
      run: |
        echo "Monitoring /dashboard..."
        response=$(curl -s -w "%{http_code}|%{time_total}|%{header_json}" https://akuna-miniapp-v2.vercel.app/dashboard)
        status=$(echo $response | cut -d'|' -f1)
        time_total=$(echo $response | cut -d'|' -f2)
        headers=$(echo $response | cut -d'|' -f3)
        
        echo "Status: $status"
        echo "Response time: ${time_total}s"
        
        if [[ "$status" =~ ^[5][0-9][0-9]$ ]] || (( $(echo "$time_total > 10" | bc -l) )); then
          echo "❌ /dashboard failed: $status (${time_total}s)"
          echo "failure=true" >> $GITHUB_OUTPUT
          echo "endpoint=/dashboard" >> $GITHUB_OUTPUT
          echo "status=$status" >> $GITHUB_OUTPUT
          echo "time=$time_total" >> $GITHUB_OUTPUT
          echo "headers=$headers" >> $GITHUB_OUTPUT
        else
          echo "✅ /dashboard OK: $status (${time_total}s)"
          echo "failure=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Monitor /miniapp
      id: miniapp_check
      run: |
        echo "Monitoring /miniapp..."
        response=$(curl -s -w "%{http_code}|%{time_total}|%{header_json}" https://akuna-miniapp-v2.vercel.app/miniapp)
        status=$(echo $response | cut -d'|' -f1)
        time_total=$(echo $response | cut -d'|' -f2)
        headers=$(echo $response | cut -d'|' -f3)
        
        echo "Status: $status"
        echo "Response time: ${time_total}s"
        
        if [[ "$status" =~ ^[5][0-9][0-9]$ ]] || (( $(echo "$time_total > 10" | bc -l) )); then
          echo "❌ /miniapp failed: $status (${time_total}s)"
          echo "failure=true" >> $GITHUB_OUTPUT
          echo "endpoint=/miniapp" >> $GITHUB_OUTPUT
          echo "status=$status" >> $GITHUB_OUTPUT
          echo "time=$time_total" >> $GITHUB_OUTPUT
          echo "headers=$headers" >> $GITHUB_OUTPUT
        else
          echo "✅ /miniapp OK: $status (${time_total}s)"
          echo "failure=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create incident issue
      if: steps.health_check.outputs.failure == 'true' || steps.dashboard_check.outputs.failure == 'true' || steps.miniapp_check.outputs.failure == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const failures = [];
          if ('${{ steps.health_check.outputs.failure }}' === 'true') {
            failures.push({
              endpoint: '${{ steps.health_check.outputs.endpoint }}',
              status: '${{ steps.health_check.outputs.status }}',
              time: '${{ steps.health_check.outputs.time }}',
              headers: '${{ steps.health_check.outputs.headers }}'
            });
          }
          if ('${{ steps.dashboard_check.outputs.failure }}' === 'true') {
            failures.push({
              endpoint: '${{ steps.dashboard_check.outputs.endpoint }}',
              status: '${{ steps.dashboard_check.outputs.status }}',
              time: '${{ steps.dashboard_check.outputs.time }}',
              headers: '${{ steps.dashboard_check.outputs.headers }}'
            });
          }
          if ('${{ steps.miniapp_check.outputs.failure }}' === 'true') {
            failures.push({
              endpoint: '${{ steps.miniapp_check.outputs.endpoint }}',
              status: '${{ steps.miniapp_check.outputs.status }}',
              time: '${{ steps.miniapp_check.outputs.time }}',
              headers: '${{ steps.miniapp_check.outputs.headers }}'
            });
          }
          
          const title = `🚨 Production Incident - ${new Date().toISOString()}`;
          const body = `## Production Monitoring Alert
          
**Time:** ${new Date().toISOString()}
**Environment:** Production
**Project:** akuna-miniapp-v2

### Failed Endpoints:
${failures.map(f => `
- **${f.endpoint}**: ${f.status} (${f.time}s)
  - Headers: \`${f.headers}\`
`).join('')}

### Response Headers:
\`\`\`
${failures.map(f => `${f.endpoint}: ${f.headers}`).join('\n')}
\`\`\`

### Action Required:
1. Check Vercel dashboard for deployment status
2. Verify domain configuration
3. Check for any recent changes that might have caused this issue
4. Update this issue when resolved

**Labels:** incident, production, monitoring`;

          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['incident', 'production', 'monitoring']
          });
          
    - name: Monitor summary
      run: |
        echo "📊 Production Monitor Summary:"
        echo "Health: ${{ steps.health_check.outputs.failure == 'true' && '❌ FAILED' || '✅ OK' }}"
        echo "Dashboard: ${{ steps.dashboard_check.outputs.failure == 'true' && '❌ FAILED' || '✅ OK' }}"
        echo "MiniApp: ${{ steps.miniapp_check.outputs.failure == 'true' && '❌ FAILED' || '✅ OK' }}"
        echo "Time: $(date)"
